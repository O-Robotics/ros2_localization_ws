// generated from rosidl_adapter/resource/msg.idl.em
// with input from ublox_ubx_msgs/msg/UBXSecSig.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module ublox_ubx_msgs {
  module msg {
    module UBXSecSig_Constants {
      @verbatim (language="comment", text=
        "Constants for Jamming States")
      const uint8 JAM_UNKNOWN = 0;
      const uint8 JAM_NO_JAMMING = 1;
      const uint8 JAM_WARNING = 2;
      const uint8 JAM_CRITICAL = 3;
      @verbatim (language="comment", text=
        "Constants for Spoofing States")
      const uint8 SPF_UNKNOWN = 0;
      const uint8 SPF_NO_SPOOFING = 1;
      const uint8 SPF_SPOOFING_INDICATED = 2;
      const uint8 SPF_SPOOFING_AFFIRMED = 3;
    };
    @verbatim (language="comment", text=
      "UBX-SEC-SIG (0x27 0x09) - Signal security information")
    struct UBXSecSig {
      @verbatim (language="comment", text=
        "Header timestamp should be acquisition time")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Fields" "\n"
        "Message version")
      uint8 version;

      @verbatim (language="comment", text=
        "uint8 reserved_0    # Reserved" "\n"
        "Information related to jamming/interference" "\n"
        "Flag indicates whether jamming/interference detection is enabled")
      @unit (value="3")
      uint8 jam_det_enabled;

      @verbatim (language="comment", text=
        "Jamming/interference state")
      uint8 jamming_state;

      @verbatim (language="comment", text=
        "uint8 reserved_1    # Reserved" "\n"
        "Information related to GNSS spoofing" "\n"
        "Flag indicates whether spoofing detection is enabled")
      @unit (value="3")
      uint8 spf_det_enabled;

      @verbatim (language="comment", text=
        "Spoofing state")
      uint8 spoofing_state;
    };
  };
};
